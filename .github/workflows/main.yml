name: CI_CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    # Instalacion de composer
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4 # Comprueba el repositorio para asegurar que el workflow puede acceder

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Ejecutar Tests con PHPUnit con base al fichero composer.json

    - name: Run test suite
      run: composer run-script test
      
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Agregar comando para listar el contenido del directorio local antes del deploy
      - name: List local files before deploy
        run: ls -R ./

      - name: Install FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@4.2.0
        with:
          server: files.000webhost.com
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./html/
          server-dir: /public_html/
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            node_modules/**
            **/node_modules/**
          before-deploy: |
            # Eliminar archivos y directorios en el servidor remoto excepto .htaccess
            lftp -e "set net:timeout 10; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER; \
            mirror --reverse --delete --exclude .htaccess ./ /public_html/" -p 22

      # Agregar comando para listar el contenido del directorio local despu√©s del deploy
      - name: List local files after deploy
        run: ls -R ./
